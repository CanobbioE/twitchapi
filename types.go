package twitchapi

// ------------ Users -------------

// userData represents and array of user
type userData struct {
	Data []User
}

// User represents a user information as described by the Twitch API
// documentation (https://dev.twitch.tv/docs/api/reference#get-users).
type User struct {
	ID              string `json:"id"`                // User's ID.
	Login           string `json:"login"`             // User's login name.
	DisplayName     string `json:"display_name"`      // User's display name.
	Type            string `json:"type"`              // User's type: "staff", "admin", "global_mod", or "".
	BroadCasterType string `json:"broadcaster_type"`  // User's broadcaster type: "partner", "affiliate", or "".
	Description     string `json:"description"`       // User's channel description.
	ProfileImageURL string `json:"profile_image_url"` // URL of the user's profile's image.
	OfflineImageURL string `json:"offline_image_url"` // URL of the user's offline image.
	ViewCount       int    `json:"view_count"`        // Total number of views of the user's channel.
	Email           string `json:"email"`             // User's email address. Returned if the request includes the user:read:edit scope.
}

// userFollowData represents the information returned by GetUsersFollows.
type userFollowData struct {
	Total int           `json:"total"`
	Data  []UserFollows `json:"data"`
}

// UserFollows represents two users follow relationship as described by the
// new Twitch API documentation (https://dev.twitch.tv/docs/api/reference#get-users-follows).
type UserFollows struct {
	FromID     string `json:"from_id"`     // ID of the user following the to_id user.
	ToID       string `json:"to_id"`       // ID of the user being followed by the from_id user.
	FollowedAt string `json:"followed_at"` // Date and time when the from_id user followed the to_id user.
}

// ------------- Clips -------------

// clipData represents an array of Clip.
type clipData struct {
	Data []Clip `json:"data"`
}

// Clip represent a clip as described by the twitch API documentation
// (https://dev.twitch.tv/docs/api/reference#get-clip).
type Clip struct {
	ID            string `json:"id"`             // ID of the clip being queried.
	URL           string `json:"url"`            // URL where the clip can be viewed.
	EmbedURL      string `json:"embed_url"`      // URL to embed the clip.
	BroadcasterID string `json:"broadcaster_id"` // User ID of the stream from which the clip was created.
	CreatorID     string `json:"creator_id"`     // ID of the user who created the clip.
	VideoID       string `json:"video_id"`       // Number of times the clip has been viewed.
	GameID        string `json:"game_id"`        // ID of the game assigned to the stream when the clip was created.
	Language      string `json:"language"`       // Language of the stream from which the clip was created.
	Title         string `json:"title"`          // Title of the clip.
	ViewCount     int    `json:"view_count"`     // ID of the video from which the clip was created.
	CreatedAt     string `json:"created_at"`     // Date when the clip was created.
	ThumbnailURL  string `json:"thumbnail_url"`  // URL of the clip thumbnail.
}

// clipInfoData represents an array of ClipInfo.
type clipInfoData struct {
	Data []ClipInfo `json:"data"`
}

// ClipInfo represent the response generated by CreateClip as described by the
// twitch API documentation (https://dev.twitch.tv/docs/api/reference#create-clip).
type ClipInfo struct {
	ID      string `json:"id"`       // ID of the clip that was created.
	EditURL string `json:"edit_url"` // URL of the edit page for the clip.
}

// ------------- Uploads -------------

// uploadData represents an array of uploadURL.
type uploadData struct {
	Data []uploadURL `json:"data"`
}

// uploadURL represent the response returned by CreateEntitlementGrantsUploadURL.
type uploadURL struct {
	url string `json:"url"`
}

// ------------- Games -------------

// Game represents a game as described by the twitch API documentation
// (https://dev.twitch.tv/docs/api/reference#get-games).
type Game struct {
	ID        string `json:"id"`          // Game ID.
	Name      string `json:"name"`        // Game name.
	BoxArtURL string `json:"box_art_url"` // Template URL for the gameâ€™s box art.
}

// games represents an array of Game.
type gameData struct {
	Data []Game `json:data`
}

// ------------- Metadatas -------------

// StreamMetadata represents metadata information about a stream as described
// by the Twitch API documentation (https://dev.twitch.tv/docs/api/reference#get-streams-metadata).
type StreamMetadata struct {
	UserID      string      `json:"user_id"`     // User ID of the streamer (broadcaster).
	GameID      string      `json:"game_id"`     // ID of the game being played on the stream: 488552 (Overwatch), 138585 (Hearthstone), or nil.
	Overwatch   Overwatch   `json:"overwatch"`   // Object containing the Overwatch metadata, if available; otherwise, nil.
	Hearthstone Hearthstone `json:"hearthstone"` // Object containing the Hearthstone metadata, if available; otherwise, nil.
}

// Overwatch represents the overwatch metadata information.
type Overwatch struct {
	Broadcaster OwBroadcaster `json:"broadcaster"` // Overwatch metadata about the broadcaster.
}

// OwBroadcaster represents an Overwatch broadcaster.
type OwBroadcaster struct {
	Hero OwHero `json:"hero"` // Metadata about the Overwatch hero selected by the broadcaster.
}

// OwHero represents the Overwatch hero metadata information.
type OwHero struct {
	Role    string `json:"role"`    // Role of the Overwatch hero.
	Name    string `json:"name"`    // Name of the Overwatch hero.
	Ability string `json:"ability"` // Ability being used by the broadcaster.
}

// Hearthstone represents the hearthstone metadata information.
type Hearthstone struct {
	Broadcaster HsHero `json:"broadcaster"` // Hearthstone metadata about the broadcaster's opponent.
	Opponent    HsHero `json:"opponent"`    // Hearthstone metadata about the broadcaster .
}

// HsHero represents the Hearthstone hero metadata information.
type HsHero struct {
	Type  string `json:"type"`  // Type of Hearthstone hero.
	Class string `json:"class"` // Class of the Hearthstone hero.
	Name  string `json:"name"`  // Name of the Hearthstone hero.
}

// metaData represents an array of StreamMetadata.
type metaData struct {
	Data       []StreamMetadata `json:"data"`
	Pagination Cursor           `json:"pagination"`
}

// ------------- Streams -------------

// Stream represents a stream as described by the Twitch API documentation
// (https://dev.twitch.tv/docs/api/reference#get-streams).
type Stream struct {
	ID           string   `json:"id"`            // Stream ID.
	UserID       string   `json:"user_id"`       // ID of the user who is streaming.
	GameID       string   `json:"game_id"`       // ID of the game being played on the stream.
	ComunityIDs  []string `json:"comunity_ids"`  // Array of community IDs.
	Type         string   `json:"type"`          // Stream type: "live", "vodcast", or ""..
	Title        string   `json:"title"`         // Stream title.
	ViewerCount  int      `json:"viewer_count"`  // Number of viewers watching the stream at the time of the query.
	StartedAt    string   `json:"started_at"`    // UTC timestamp.
	Language     string   `json:"language"`      // Stream language.
	ThumbnailURL string   `json:"thumbnail_url"` // Thumbnail URL of the stream. All image URLs have variable width and height.
}

// streams represents an array of Stream.
type streamData struct {
	Data       []Stream `json:"data"`
	Pagination Cursor   `json:"pagination"`
}

// Cursor represents a cursor as described by the Twitch API documentation.
type Cursor struct {
	Cursor string `json:"cursor"`
}

// ------------- Video -------------

// Video represents a video information as described by the Twitch API
// documentation (https://dev.twitch.tv/docs/api/reference#get-videos).
type Video struct {
	ID           string `json:"id"`            // ID of the video.
	UserID       string `json:"user_id"`       // ID of the user who owns the video.
	Title        string `json:"title"`         // Title of the video.
	Description  string `json:"description"`   // Description of the video.
	CreatedAt    string `json:"created_at"`    // Date when the video was created.
	PublishedAt  string `json:"published_at"`  // Date when the video was published.
	ThumbnailURL string `json:"thumbnail_url"` // Template URL for the thumbnail of the video.
	ViewCount    int    `json:"view_count"`    // Number of times the video has been viewed.
	Language     string `json:"language"`      // Language of the video.
	Duration     string `json:"duration"`      // Length of the video.
}

// videoData represents an array of Video.
type videoData struct {
	Data       []Video `json:"data"`
	Pagination Cursor  `json:"pagination"`
}
